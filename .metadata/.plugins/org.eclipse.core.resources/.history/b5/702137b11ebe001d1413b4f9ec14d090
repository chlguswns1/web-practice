<!-- jQuery 기본
	1. jQuery 개요
		- 모든 브라우저에서 동작하는 클라이언트 자바스크립트 라이브러리.
		- 다음의 기능을 위해 제작
			. DOM과 관련된 처리를 쉽게 구현
			. 일관된 이벤트 연결을 쉽게 구현
			. 시각적 효과를 쉽게 구현
			. ajax 애플리케이션을 쉽게 구현

		- http://jquery.com
		- jQuery 사용 방법
			1) 직접 다운받아 사용하는 방법.
			2) CDN 호스트 사용하는 방법.
				 . Content Delivery Network
				 . 사용자에게 간편하게 콘텐츠를 제공하는 방식을 의미.
				 . 구글, 마이크로소프트, jQuery측에서 사용자가 jQuery를 사용하기 편하게 콘텐츠를 제공.
-->

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>jQuery 태그 구조</title>
  
<!-- 9. jQuery를 사용한 배열 관리(2)를 위한 예제 --> 
<style type="text/css">
	.high-light { background:yellow; }
	.high-light-0 { background:yellow; }
	.high-light-1 { background:orange; }
	.high-light-2 { background:blue; }
	.high-light-3 { background:green; }
	.high-light-4 { background:red; }
</style>
  
<!-- 방법1. 직접 다운로드 -->
<script src="./js/jquery-3.6.3.min.js"></script><!-- 이렇게 하는순간 이코드에 포함된거다 -->

<!-- 방법2.CDN 방식 -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>

<script type="text/javascript">
/* 1. 라이브러리 포함 방법 : 2가지 방식 */
//- 방법1 방법2 참조 

/* 2. jQuery를 사용한 웹 페이지 형식   
//	-jQuery() //jQuery함수를 호출했을때 객체를 반환해준다
//	-$(document).ready(function(){});<-이거//바디영역을 전부읽어 갔을때 jQuery가 감시하고있다 읽어간순간
							      //입력으로 전달하는 함수를 실행함
//		.문서가 준비 완료되면매개변수로전달된 함수를 실행하라는 의미.
//		.$(function(){});//간단한 형식 정의 위와 같은 코드지만 융통성있는 코드로 짧게줄일수있다
	$(document).ready(function(){//onload와(차이점) 다르게 여러개 사용할 수 있다
		alert('First Ready');
	});
	
	$(document).ready(function(){
		alert('Second Ready');
	});
	
	$(document).ready(function(){
		alert('Thirth Ready');
	});
*/ 	
/* 3. jQuery 기본 선택자
// - jQuery 메서드의 가장 기본적인 형태
//   . 문서 객체를 다룰 때 사용하는 형태
//   . jQuery에서 가장 많이 사용하는 형태

$(document).ready(function(){
// 1) 전체 선택자(*)
	//$('*').css('color','red');//전체선택자



// 2) 태그 선택자
	
	//한 개 태그 선택
	
	//h1을 선택.css()메소드정의
	//$('h1').css('color','orange');

	//두 개 이상의 태그 선택
	//$('h1, p').css('color','blue');

// 3) 아이디 선택자
	//$('#target').css('color','blue')

// 4) 클래스 선택자
	//$('.item').css('color','yellow');
	$('h1.item').css('color','yellow');//가독성있는 접근법 h1에있는 아이템들
	
	$('.item.select').css('color','green');//주의) 접근해 갈때는 빈스페이스가 생기지 않도록 주의.

});
*/

/* 4. jQuery 자식(손)선택자와 후손 선택자
	//$(document).ready(function(){}); ↓밑에처럼 줄일수 있다
	$(function(){
		
	// - 자식(손) 선택자 - 자식은 div가 사실상 지정된것이다	
	$('body > *').css('color','red')//자식에있는 모든것을 선택하겠다

// - 후손 선택자 - 후손은 div를 포함안 안에있는 모든것들이 태그된것이다
	$('body *').css('color','blue')//후손선택자의 경우는 스페이스
	
	});		
*/	

/* 5. jQuery 속성 선택자  
//- 기본 선택자 뒤에 붙여 사용.
//- 입력 양식과 관련된 태그를 선택할 때 많이 사용.

	$(function () {
		$('input[type = text]').val('hello jQuery');//처음화면이 보여질때 val()안에 텍스트가 보여짐
	})
  */

/* 6. jQuery 필터 선택자
// 1) 입력 양식 필터 선택자 
// .input:button
// .input:checkbox
// .input:radio
// .input:file
// .input:image
// .input:password
// .input:text
// .input:submit
// .input:reset

// .요소:checked
// .요소:disabled
// .요소:enabled
// .요소:focus
// .요소:selected 

	$(function () {
		setTimeout(function(){//항목을 선택하면 5초뒤에 선택되어진 항목을 alert창으로 출력
			var value = $('select > option:selected').val();	
		alert(value);
		},5000);//한번만 이벤트함수 발생
	})
*/	

// 2) 위치 필터 선택자
//   . 선택자를 사용해 문서 객체를 선택한 후에 다음과 같은 위치를 지정한다.
//    >> 요소:odd -> 홀수 번째에 위치한 문서 객체 선택.
//    >> 요소:even -> 짝수 번째에 위치한 문서 객체 선택.
//    >> 요소:first -> 첫번째에 위치한 문서 객체 선택.
//    >> 요소:last -> 마지막에 위치한 문서 객체 선택.
	
	/* $(function () {
		$('tr:odd').css('background','silver'); //0 부터 카운팅
		$('tr:even').css('background','#9F9F9F');
		$('tr:first').css('background','blue').css('color','#FFFFFF');
	}) */

// 3) 함수 필터 선택자
//   >> 요소:contains(문자열)
//       ->특정 문자열을 포함하는 문서 객체를 선택.
//   >> 요소:eq(n)
//       ->n번째에 위치하는 문서 객체를 선택.
//   >> 요소:gt(n)
//       ->n번째 초과하는 위치에 있는 문서 객체를 선택.
//   >> 요소:has(h1)
//       ->h1 태그를 가지고 있는 문서 객체를 선택.
//   >> 요소:lt(n)
//       ->n번째 미만에 위치하는 문서 객체를 선택.
//   >> 요소:not(선택자)
//       ->선택자와 일치하지 않는 문서 객체를 선택.
//   >> 요소:nth-child
//       -> 3n+1번째에 위치하는 문서 객체를 선택(인덱스 1부터 카운팅).

	$(function () {
		$('tr:eq(0)').css('background','black').css('color','white');
		$('tr:nth-child(3n+1)').css('background','green');
	})



/* 7. jQuery를 사용한 배열 관리(1) */
// - each() 메서드 사용
//    . 매개 변수로 입력한 함수 사용.
//    . for in 반복문처럼 객체나 배열의 요소 검사하는 메서드

// - each() 메서드의 형태


/* 8. jQuery를 사용한 배열 관리(2) */
// - 각 객체에 서로 다른 class 속성을 설정하고 싶을 때 each() 메서드 사용.


/* 9. jQuery를 사용한 객체 확장 */ 


/* 10. jQuery 라이브러리 충돌 방지 */
// - jQuery외 prototype 자바스크립트 라이브러리도 동일하게 $를 
//    식별자로 사용. 
// - 따라서 두 라이브러리를 함께 사용시 충돌 발생.


</script>
</head>
<body>
<!-- 3-1/3-2. 전체/태그 선택자 
	<h1>Lorem ipsum</h1>
	<p>Lorem ipsum dolor sit amet.</p>
	<h1>Lorem ipsum</h1>
	<p>Lorem ipsum dolor sit amet.</p>
	<hr>
-->	
<!-- 3-3. 아이디 선택자 
	<h1>Header-0</h1>
    <h1 id="target">Header-1</h1>
    <h1>Header-2</h1>
    <hr>
-->

<!-- 3-4. 클래스 선택자 
    <h1 class="item">Header-0</h1>
    <h1 class="item select">Header-1</h1>
    <h1 class="item">Header-2</h1>
    <hr>
 -->
<!-- 4. 자식(손) 선택자와 후손 선택자 
	<div>
		<ul>
			<li>Apple</li>
			<li>Bag</li>
			<li>Cat</li>
			<li>Dog</li>
		</ul>
	</div>
    <hr>
-->
<!-- 5. 속성 선택자
    <input type="text"/></br>
    <input type="password"/></br>
    <input type="radio"/></br>
    <input type="checkbox"/></br>
    <input type="file"/></br>
    <hr>
 -->
<!-- 6-1. 입력 양식 필터 선택자 
	<select>
		<option>Apple</option>
		<option>Bag</option>
		<option>Cat</option>
		<option>Dog</option>
	</select>
    <hr>
-->
<!-- 6-2/6-3. 필터선택자 -->
	<table border="1">
		<tr><th>이름</th><th>혈액형</th><th>지역</th></tr>
		<tr><td>홍길동</td><td>AB형</td><td>서울시 강남구</td></tr>
		<tr><td>홍길서</td><td>A형</td><td>서울시 마포구</td></tr>
		<tr><td>홍길남</td><td>B형</td><td>서울시 서초구</td></tr>
		<tr><td>홍길북</td><td>O형</td><td>서울시 송파구</td></tr>
		<tr><td>김길동</td><td>O형</td><td>서울시 영등포구</td></tr>
		<tr><td>이길동</td><td>A형</td><td>서울시 강서구</td></tr>
		<tr><td>박길동</td><td>B형</td><td>서울시 용산구</td></tr>
	</table>
	<hr>

<!-- 8. jQuery를 사용한 배열 관리(2) -->
	<h1>item - 0</h1>
	<h1>item - 1</h1>
	<h1>item - 2</h1>
	<h1>item - 3</h1>
	<h1>item - 4</h1>

</body>
</html>